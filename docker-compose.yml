version: '3.8'

services:
  # Strapi Backend
  strapi:
    build:
      context: ./strapi-backend
      dockerfile: Dockerfile
    container_name: axerate-strapi
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_CLIENT: sqlite
      DATABASE_FILENAME: .tmp/data.db
      APP_KEYS: ${STRAPI_APP_KEYS}
      API_TOKEN_SALT: ${STRAPI_API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${STRAPI_ADMIN_JWT_SECRET}
      TRANSFER_TOKEN_SALT: ${STRAPI_TRANSFER_TOKEN_SALT}
      JWT_SECRET: ${STRAPI_JWT_SECRET}
      STRAPI_URL: ${STRAPI_URL:-http://localhost:1337}
      STRAPI_PROXY: ${STRAPI_PROXY:-false}
      HOST: 0.0.0.0
      PORT: 1337
    volumes:
      - strapi-uploads:/app/public/uploads
      - strapi-data:/app/.tmp
    ports:
      - "1337:1337"
    networks:
      - axerate-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:1337/_health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Next.js Frontend
  nextjs:
    build:
      context: ./axerate-nextjs
      dockerfile: Dockerfile
    container_name: axerate-nextjs
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_STRAPI_URL: ${NEXT_PUBLIC_STRAPI_URL:-http://strapi:1337}
      STRAPI_API_URL: ${STRAPI_API_URL:-http://strapi:1337}
      STRAPI_API_TOKEN: ${STRAPI_API_TOKEN}
    ports:
      - "3000:3000"
    networks:
      - axerate-network
    depends_on:
      strapi:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (optional but recommended for production)
  nginx:
    image: nginx:alpine
    container_name: axerate-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - axerate-network
    depends_on:
      - nextjs
      - strapi

volumes:
  strapi-uploads:
    driver: local
  strapi-data:
    driver: local

networks:
  axerate-network:
    driver: bridge
